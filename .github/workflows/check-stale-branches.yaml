name: ðŸ‘€ Collect Stale Environments

run-name: ðŸ‘€ Collect Stale Environments ðŸ‘¾ ${{ github.actor }}

on:
  push:
    branches:
      - feature/CB2-11814

permissions:
  id-token: write
  contents: write

jobs:
  collect-stale-branches:
    name: Collect Stale branches
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    runs-on: X64
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: List all branches with pagination
        run: |
          page=1
          per_page=100
          branches=()

          while true; do
            echo "Fetching branches - page $page"

            response=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/dvsa/cvs-svc-app-logs/branches?per_page=$per_page\&page=$page \
              --jq '.[].name | select(test("^(main|master|release|develop|devops|HEAD)$") | not)')
            
            if [[ -z "$response" ]]; then
              echo "No more branches found. Exiting loop."
              break
            fi

            # Add the current page's branches to the array
            while read -r branch; do
              branches+=("$branch")
            done <<< "$response"

            ((page++))
          done

          # Output all branches
          echo "Total branches found: ${#branches[@]}"
          printf "%s\n" "${branches[@]}"

      - name: Get list of commit dates for each branch
        run: |
          for branch in "${branches[@]}"; do
            echo "Getting commits for branch: $branch"
            
            page=1
            per_page=100
            commits=()

            while true; do
              echo "Fetching commits for branch $branch - page $page"

              commit_response=$(gh api \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                /repos/dvsa/cvs-service-tester/commits/$branch?per_page=$per_page\&page=$page \
                --jq '[.[] | .commit.committer.date]')
              
              if [[ -z "$commit_response" ]]; then
                echo "No more commits found for branch $branch. Exiting loop."
                break
              fi

              # Add commit dates to the array
              while read -r commit_date; do
                commits+=("$commit_date")
              done <<< "$commit_response"

              ((page++))
            done

            # Output commit dates for the current branch
            echo "Commit dates for branch $branch:"
            printf "%s\n" "${commits[@]}"
          done
